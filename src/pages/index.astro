---
import Start from '../components/Start2.svelte'
import Layout from '../layouts/Layout.astro'
import Paginado from '../components/Paginado.svelte'
import NavBar from '../components/NavBar2.svelte'
import Contacto from '../components/Contacto.svelte'
import UpButton from '../components/UpButton.svelte'

import Estudios from '../components/pages/Estudios.svelte'
import Experiencia from '../components/pages/Experiencia.svelte'
import Idiomas from '../components/pages/Idiomas.svelte'
import Proyectos from '../components/pages/Proyectos.svelte'
import SobreMi from '../components/pages/SobreMi.svelte'
import Tecnologias from '../components/pages/Tecnologias.svelte'
import SoftSkills from '../components/pages/SoftSkills.svelte'

import type { ISection } from '../interfaces/ISection.ts'

const sections: ISection[] = [
  { title: 'Sobre mí', url: 'sobre-mi', icon: 'Mujer', component: SobreMi },
  { title: 'Estudios', url: 'estudios', icon: 'Estudios', component: Estudios },
  { title: 'Idiomas', url: 'idiomas', icon: 'Idiomas', component: Idiomas },
  { title: 'Experiencia', url: 'experiencia', icon: 'Estrella', component: Experiencia },
  { title: 'Tecnologías', url: 'tecnologias', icon: 'PC', component: Tecnologias },
  { title: 'Proyectos', url: 'proyectos', icon: 'LlaveInglesa', component: Proyectos },
  { title: 'Soft skills', url: 'soft-skills', icon: 'Cerebro', component: SoftSkills },
]
---

<style lang="scss">
  .wrapper {
    max-width: 1875px;
    width: 100%;
    margin: auto;
    position: relative;
  }
</style>

<style lang="scss" is:global></style>

<Layout title="Laia Martin | Portafolio">
  <div class="wrapper">
    <!-- 
    <NavBar sections={sections} />
    <Start />
    <UpButton client:only="svelte" />
    -->
    <Paginado sections={sections} />

    <!-- El contacto aparece solo cuando está modo desktop -->
    <Contacto />
  </div>
</Layout>

<script>
  //NavBar JavaScript
  const HTMLPages: HTMLElement = document.querySelector('.paginado')
  const navBarButtons = document.querySelectorAll('.nav-bar .go-to-sections')

  const pageOffset: number = 300 //coordinando los pixeles con el paginado
  const topDistance: number = window.scrollY + HTMLPages.getBoundingClientRect().top

  for (let HTMLButton of navBarButtons) {
    HTMLButton.addEventListener('click', () => {
      const buttonIndex: number = parseInt(HTMLButton.getAttribute('meta-index'))
      window.scrollTo(0, topDistance + pageOffset * buttonIndex)
    })
  }

  //Paginado JavaScript
  const pages = [...HTMLPages.children]
  const marginPage: number = 25

  const contenedorHeight: number = topDistance + pageOffset * pages.length
  const paginasHeight: number = HTMLPages.getBoundingClientRect().height
  const hidePage: number = paginasHeight - paginasHeight / 5.5

  document.addEventListener('scroll', () => {
    pages.forEach((page: HTMLElement, i) => {
      if (window.scrollY >= topDistance + pageOffset * i) {
        page.style.transform = `translateY(${i * marginPage}px)`
      } else {
        page.style.transform = `translateY(${hidePage}px)`
      }
    })

    if (window.scrollY > contenedorHeight + window.innerHeight / 3) {
      HTMLPages.style.transform = `translateY(-200px)`
    }

    if (window.scrollY < contenedorHeight + window.innerHeight / 3 && window.scrollY > contenedorHeight) {
      HTMLPages.style.transform = `translateY(0)`
    }
  })

  HTMLPages.parentElement.style.height = `${contenedorHeight}px`

  /*UpButton JavaScript
  let HTMLGoToStart: HTMLElement = document.querySelector('.upButton')

  document.addEventListener('scroll', () => {
    if (window.scrollY >= topDistance) {
      HTMLGoToStart.style.display = `flex`
    } else {
      HTMLGoToStart.style.display = `none`
    }
  })

  HTMLGoToStart.addEventListener('click', () => {
    window.scrollTo(0, 0)
  })*/
</script>
